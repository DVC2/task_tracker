name: TaskTracker Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test

  lint_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run lint check
        run: npm run lint:check

  cli_test:
    runs-on: ubuntu-latest
    needs: unit_test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Test CLI commands
        run: |
          # Initialize TaskTracker
          node bin/tt init
          
          # Test journal commands
          node bin/tt j "Test journal entry"
          node bin/tt j "Test decision" --type decision
          node bin/tt j "Test with tags" --tags test,ci
          
          # Test context generation
          node bin/tt c
          node bin/tt cf 1
          
          # Test PRD commands
          node bin/tt prd "Test project requirements"
          node bin/tt prd-show
          
          # Test journal show
          node bin/tt journal-show
          node bin/tt journal-show --type decision
          
          echo "✅ All CLI commands executed successfully"

  documentation_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check documentation structure
        run: |
          # Verify main documentation files exist
          if [ ! -f "README.md" ]; then
            echo "Missing README.md"
            exit 1
          fi
          
          # Check for package.json
          if [ ! -f "package.json" ]; then
            echo "Missing package.json"
            exit 1
          fi
          
          echo "✅ Documentation structure verified"

  structure_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Verify repository structure
        run: |
          # Check for core lib structure
          for dir in lib/core lib/commands; do
            if [ ! -d "$dir" ]; then
              echo "Missing directory: $dir"
              exit 1
            fi
          done
          
          # Check for command registry
          if [ ! -f "lib/commands/index.js" ]; then
            echo "Missing command registry"
            exit 1
          fi
          
          # Check for core modules
          core_modules=("unified-config-manager.js" "formatting.js" "cli-parser.js" "command-registry.js")
          for module in "${core_modules[@]}"; do
            if [ ! -f "lib/core/$module" ]; then
              echo "Missing core module: $module"
              exit 1
            fi
          done
          
          # Check for main commands
          commands=("journal.js" "prd.js" "context.js" "context-v2.js" "help.js" "init.js")
          for cmd in "${commands[@]}"; do
            if [ ! -f "lib/commands/$cmd" ]; then
              echo "Missing command: $cmd"
              exit 1
            fi
          done
          
          echo "✅ Repository structure verified" 